import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense
from tensorflow.keras.optimizers import Adam
from tensorflow.keras.datasets import mnist
from tensorflow.keras.utils import to_categorical
import matplotlib.pyplot as plt

(x_train, y_train), (x_test, y_test) = mnist.load_data()
x_train = x_train.reshape((x_train.shape[0], -1)) / 255.0
x_test = x_test.reshape((x_test.shape[0], -1)) / 255.0
y_train = to_categorical(y_train)
y_test = to_categorical(y_test)

def create_model(layers=2, neurons=64, activation='relu', learning_rate=0.001):
    model = Sequential()

    model.add(Dense(neurons, input_shape=(784,), activation=activation))

    for _ in range(layers - 1):
        model.add(Dense(neurons, activation=activation))

    model.add(Dense(10, activation='softmax'))

    optimizer = Adam(learning_rate=learning_rate)
    model.compile(optimizer=optimizer, loss='categorical_crossentropy', metrics=['accuracy'])
    return model

def plot_history(history, title):
    plt.figure(figsize=(12, 4))
